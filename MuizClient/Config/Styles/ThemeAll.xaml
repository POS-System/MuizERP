<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--<ControlTemplate TargetType="Button" x:Key="btTemplate">
        <Border CornerRadius="6"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Height="{TemplateBinding Height}"
                    Width="{TemplateBinding Width}"
                    MinWidth="75"
                    BorderBrush="#FF4852B8"
            >
            <ContentControl Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}" />
        </Border>
    </ControlTemplate>-->


    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--<ControlTemplate TargetType="Button">
                    <Border CornerRadius="6"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            MinWidth="75"
                            BorderBrush="#FF4852B8"
                    >
                        <ContentControl Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>-->

                <ControlTemplate TargetType="{x:Type Button}">
                        <!--BorderBrush="{TemplateBinding BorderBrush}"--> 
                    <Border 
                        x:Name="border" 
                        BorderBrush="{TemplateBinding BorderBrush}"  
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        MinWidth="75"
                        CornerRadius="6"
                    >
                        <!--<ContentControl Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}" />-->
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBorder}"/>
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBorder}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorButtonMouseOverBorder}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorButtonPressedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorButtonPressedBorder}"/>
                        </Trigger>-->

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ColorButtonDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ColorButtonDisabledBorder}"/>
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>